// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Poker.API.DbContexts;

namespace Poker.API.Migrations
{
    [DbContext(typeof(PokerHandsContext))]
    [Migration("20210329004759_InitialMigration2")]
    partial class InitialMigration2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Poker.API.DataObjects.Entities.PokerHand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Card1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Card2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Card3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Card4")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Card5")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PokerHands");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a9ff5f60-3500-4311-bdac-3faacdeb92b1"),
                            Card1 = "AH",
                            Card2 = "AS",
                            Card3 = "AD",
                            Card4 = "AC",
                            Card5 = "2H",
                            DateCreated = new DateTimeOffset(new DateTime(2021, 3, 28, 20, 47, 59, 506, DateTimeKind.Unspecified).AddTicks(8130), new TimeSpan(0, -4, 0, 0, 0)),
                            PlayerName = "Berry",
                            Type = "Four of a Kind"
                        },
                        new
                        {
                            Id = new Guid("8d6e84de-47ce-4561-9a41-5215eb26526b"),
                            Card1 = "KC",
                            Card2 = "2C",
                            Card3 = "3C",
                            Card4 = "4C",
                            Card5 = "8C",
                            DateCreated = new DateTimeOffset(new DateTime(2021, 3, 28, 20, 47, 59, 508, DateTimeKind.Unspecified).AddTicks(9326), new TimeSpan(0, -4, 0, 0, 0)),
                            PlayerName = "Jerry",
                            Type = "Flush"
                        },
                        new
                        {
                            Id = new Guid("7d6e84de-47ce-4561-9a41-5215eb26526b"),
                            Card1 = "KH",
                            Card2 = "2H",
                            Card3 = "3H",
                            Card4 = "4H",
                            Card5 = "9H",
                            DateCreated = new DateTimeOffset(new DateTime(2021, 3, 28, 20, 47, 59, 508, DateTimeKind.Unspecified).AddTicks(9419), new TimeSpan(0, -4, 0, 0, 0)),
                            PlayerName = "Jerry",
                            Type = "Flush"
                        },
                        new
                        {
                            Id = new Guid("6d6e84de-47ce-4561-9a41-5215eb26526b"),
                            Card1 = "QC",
                            Card2 = "2D",
                            Card3 = "7C",
                            Card4 = "5S",
                            Card5 = "5H",
                            DateCreated = new DateTimeOffset(new DateTime(2021, 3, 28, 20, 47, 59, 508, DateTimeKind.Unspecified).AddTicks(9431), new TimeSpan(0, -4, 0, 0, 0)),
                            PlayerName = "Jerry",
                            Type = "Pair"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
